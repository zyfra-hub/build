# This workflow relies on actions/cache to store the hak dependency artifacts as they take a long time to build
# Due to this extra care must be taken to only ever run all build_* scripts against the same branch to ensure
# the correct cache scoping, and additional care must be taken to not run untrusted actions on the develop branch.
on:
  workflow_call:
    inputs:
      version:
        type: string
        required: false
        description: "Version string to override the one in package.json, used for non-release builds"

jobs:
  build:
    runs-on: macos-14 # M1
    steps:
      - uses: actions/checkout@v4
        with:
          repository: element-hq/element-desktop
          ref: ${{ inputs.version }}

      - uses: actions/download-artifact@v4
        with:
          name: webapp

      - uses: actions/checkout@v4
        with:
          path: ./overrides
          ref: desktop
      - name: Overrides
        run: cp -r overrides/* ./

      - name: Cache .hak
        id: cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('hakHash', 'electronVersion') }}
          path: |
            ./.hak

      - name: Install Rust
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          rustup toolchain install stable --profile minimal --no-self-update
          rustup default stable
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      # M1 macos-14 comes without Python preinstalled
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "yarn"

      # Does not need branch matching as only analyses this layer
      - name: Install Deps
        run: "yarn install --frozen-lockfile"

      - name: Build Natives
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          # Python 3.12 drops distutils which keytar relies on
          pip3 install setuptools
          yarn build:native:universal

      - name: "Build App"
        run: |
          yarn build:universal --publish never
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      # We exclude mac-universal as the unpacked app takes forever to upload and zip and dmg already contains it
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: |
            dist
            !dist/mac-universal/**
          retention-days: 1
